# Generated by Django 4.1.4 on 2023-01-05 12:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AllQuestions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'all_questions',
            },
        ),
        migrations.CreateModel(
            name='Grades',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=100)),
                ('grade_from', models.DecimalField(decimal_places=2, max_digits=4)),
                ('grade_to', models.DecimalField(decimal_places=2, max_digits=4)),
            ],
            options={
                'db_table': 'grades',
            },
        ),
        migrations.CreateModel(
            name='PaperSetupDescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('department', models.CharField(choices=[('KPO', 'KPO'), ('SOFTWARE', 'SOFTWARE')], default='KPO', max_length=50)),
                ('paper_description', models.CharField(max_length=1000)),
                ('paper_title', models.CharField(max_length=500)),
                ('paper_time', models.IntegerField()),
                ('paper_marks', models.IntegerField()),
            ],
            options={
                'db_table': 'paper_setup_description',
            },
        ),
        migrations.CreateModel(
            name='PaperSetupSubjectMap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('subject_time', models.IntegerField()),
                ('subject_marks', models.IntegerField()),
                ('subject_order', models.IntegerField()),
                ('subject_questions', models.IntegerField()),
                ('paper_setup_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.papersetupdescription')),
            ],
            options={
                'db_table': 'paper_setup_subject_map',
            },
        ),
        migrations.CreateModel(
            name='PassageInstructionContents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('types', models.CharField(choices=[('passage', 'passage'), ('instruction', 'instruction'), ('typing', 'typing')], default='instruction', max_length=50)),
                ('title', models.CharField(max_length=5000)),
                ('description', models.TextField()),
                ('status', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('question_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.allquestions')),
            ],
            options={
                'db_table': 'passage_instruction_contents',
            },
        ),
        migrations.CreateModel(
            name='TestLevels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('test_level', models.CharField(max_length=100)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'test_levels',
            },
        ),
        migrations.CreateModel(
            name='Subjects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('subject', models.CharField(max_length=100, unique=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'subject',
            },
        ),
        migrations.CreateModel(
            name='SubjectQuestionMap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('all_question_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.allquestions')),
                ('paper_setup_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.papersetupdescription')),
                ('paper_setup_subject_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.papersetupsubjectmap')),
            ],
            options={
                'db_table': 'subject_question_map',
            },
        ),
        migrations.CreateModel(
            name='SubjectiveQuestions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('question', models.CharField(max_length=1000)),
                ('answer_key', models.CharField(max_length=1000)),
                ('status', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('passage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.passageinstructioncontents')),
                ('question_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.allquestions')),
            ],
            options={
                'db_table': 'subjective_questions',
            },
        ),
        migrations.AddField(
            model_name='papersetupsubjectmap',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.subjects'),
        ),
        migrations.AddField(
            model_name='papersetupdescription',
            name='test_level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.testlevels'),
        ),
        migrations.CreateModel(
            name='MultipleChoiceQuestions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('question_title', models.CharField(max_length=1000)),
                ('answer_key', models.CharField(max_length=500)),
                ('optionA', models.CharField(max_length=500)),
                ('optionB', models.CharField(max_length=500)),
                ('optionC', models.CharField(max_length=500)),
                ('optionD', models.CharField(max_length=500)),
                ('status', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('passage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.passageinstructioncontents')),
                ('question_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.allquestions')),
            ],
            options={
                'db_table': 'multiple_choice_questions',
            },
        ),
        migrations.CreateModel(
            name='ImageMultipleChoiceQuestions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('question_title', models.CharField(max_length=1000)),
                ('answer_key', models.CharField(max_length=500)),
                ('optionA', models.CharField(max_length=500)),
                ('optionB', models.CharField(max_length=500)),
                ('optionC', models.CharField(max_length=500)),
                ('optionD', models.CharField(max_length=500)),
                ('image', models.ImageField(upload_to='images/')),
                ('status', models.BooleanField(default=True)),
                ('created_by_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('question_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.allquestions')),
            ],
            options={
                'db_table': 'image_multiple_choice_questions',
            },
        ),
        migrations.CreateModel(
            name='ImageBasedSubjectiveQuestions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('question_title', models.CharField(max_length=1000)),
                ('answer_key', models.CharField(max_length=500)),
                ('image', models.ImageField(upload_to='images/')),
                ('status', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('question_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.allquestions')),
            ],
            options={
                'db_table': 'image_based_subjective_questions',
            },
        ),
        migrations.CreateModel(
            name='ExcelQuestions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('sheet_id', models.CharField(max_length=1000)),
                ('excel_title', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=500)),
                ('type', models.CharField(default='Excel', max_length=50)),
                ('status', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('question_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.allquestions')),
            ],
            options={
                'db_table': 'excel_questions',
            },
        ),
        migrations.AddField(
            model_name='allquestions',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.subjects'),
        ),
    ]
